openapi: 3.1.0
info:
  title: Authorization
  version: 1.0.0
servers:
  - url: https://test.digitzsapi.com/test
tags:
    - name: Authorization
    - name: Payments
    - name: Merchants
components:
  schemas:
    data:
      type: object
      description: A key for grouping different types of API data.
    APIcallType:
      type: string
      description: This API call type. This call must be `auth`.
      example: auth
      default: auth
    attributes:
      type: object
      description: A key for grouping data.
    appId:
      type: string
      description: Supplied by Digitzs on onboarding.
    appKey:
      type: string
      description: The key used to create an appToken with `/auth/token`.
    appToken:
      type: string
      description: The `Authorization` header value to use for most API calls.
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: x-api-key
security:
  - sec0: []
paths:
  /auth/key:
    post:
      summary: Create API Key
      operationId: create-api-key
      description: >-
        Use endpoint `POST /auth/key` to get an appKey for your application. You
        can create a new key at any time. Creating a new key renders the old key
        unusable. This is required and only used for `/auth/token`.


        
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - type
                - attributes
                - appId
              properties:
                data:
                  $ref: '#/components/schemas/data'
                  properties:
                    type:
                      $ref: '#/components/schemas/APIcallType'
                    attributes:
                      $ref: '#/components/schemas/attributes'
                      properties:
                        appId:
                          $ref: '#/components/schemas/appId'
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "links": {
                        "self": "xxxx/auth/key"
                      },
                      "data": {
                        "type": "auth",
                        "id": "xxxx",
                        "attributes": {
                          "appKey": "xxxx"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: URL for the current resource.
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type of the response data.
                      id:
                        type: string
                        description: The same `x-api-key` used in the Header.
                      attributes:
                        type: object
                        properties:
                          appKey:
                            $ref: '#/components/schemas/appKey'
      deprecated: false
  /auth/token:
    post:
      summary: Create App Token
      operationId: create-app-token
      description: >-
        Use endpoint `POST /auth/token` to get a temporary appToken. You will
        use the token to authenticate your applicationâ€™s calls to the Digitzs
        API. 

        :::info Info

        The `Authorization` header value that is created with this must be formatted `Bearer xxxxxx`, with x's replaced with the `appToken` value.
        
        :::

        :::warning Warning

        Tokens expire after one hour.
        
        :::
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - type
                - attributes
                - appKey
              properties:
                data:
                  $ref: '#/components/schemas/data'
                  properties:
                    type:
                      $ref: '#/components/schemas/APIcallType'
                    attributes:
                      attributes:
                      $ref: '#/components/schemas/attributes'
                      properties:
                        appKey:
                          $ref: '#/components/schemas/appKey'
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "links": {
                        "self": "xxxx/auth/token"
                      },
                      "data": {
                        "type": "auth",
                        "id": "xxxx",
                        "attributes": {
                          "appToken": "xxxx"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: URL for the current resource.
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type of the response data.
                      id:
                        type: string
                        description: The same `x-api-key` used in the Header.
                      attributes:
                        type: object
                        properties:
                          appToken:
                            $ref: '#/components/schemas/appToken'
      deprecated: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
x-readme-fauxas: true
